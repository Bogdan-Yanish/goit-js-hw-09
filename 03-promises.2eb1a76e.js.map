{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SACpCC,EAEIH,EADFI,SAAYC,EAAKF,EAALG,MAAOC,EAAIJ,EAAJK,KAAMC,EAAMN,EAANO,OAErBC,EAAU,CACdC,aAAa,GA4Bf,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUR,MAAAS,IAEnBM,EAAO,CAACP,WAAUR,MAAAS,G,GAEnBA,E,IAnCPf,EAAKuB,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAMC,iBAMN,IAJA,IAAIC,EAAaC,OAAOtB,EAAMuB,OAC1BC,EAAYF,OAAOpB,EAAKqB,OACxBE,EAAcH,OAAOlB,EAAOmB,OAEvBG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DlB,EAAckB,EAAUL,GACvBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAAL3B,MACjBR,EAAAqC,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANH,EAAM,MAC3DvB,E,IAEH2B,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUyB,EAAKN,EAAL3B,MAClBR,EAAAqC,OAAOK,QAAQ,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,MAC1D5B,E,IAGFe,GAAcG,EAEhBL,EAAMiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst {\n  elements: { delay, step, amount },\n} = form;\nconst options = {\n  backOverlay: true,  \n};\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm (event) {\n  event.preventDefault();\n  \n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delayValue)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, \n      options);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n      options);\n    });\n\n    delayValue += stepValue;\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay);\n\n  }); \n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$options","backOverlay","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","position1","then","param","delay1","Notify","success","concat","catch","delay2","failure","currentTarget","reset"],"version":3,"file":"03-promises.2eb1a76e.js.map"}